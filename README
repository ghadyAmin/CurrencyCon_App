# Currency conversion project

This project is a currency conversion application that allows users to convert between different currencies. It provides real-time exchange rates and supports various currencies worldwide.

 ## Features

1. Currency Conversion: Users can enter an amount in a selected source currency and convert it to the desired target currency. The application fetches real-time exchange rates to ensure accurate conversions.

1. Real-time Exchange Rates: The application retrieves the latest exchange rates from reliable sources or APIs. This ensures that the conversion is based on up-to-date and accurate currency values.

1. Multiple Currencies: The project supports a wide range of currencies from around the world. Users can select both the source and target currencies from a comprehensive list.

1. User-Friendly Interface: The application provides a clean and intuitive interface, allowing users to easily navigate through the conversion process. Clear instructions and input fields guide users through the conversion steps.

1. Error Handling: The project incorporates error handling mechanisms to handle scenarios such as invalid inputs, network errors, or unavailable exchange rate data. Users are provided with appropriate error messages and guidance to resolve issues.

## Project summary

The currency conversion project aims to develop an application that allows users to convert between different currencies in real-time. The application provides an intuitive and user-friendly interface for easy currency conversion.

### the issue we are hoping to solve

we hope to faciliate the currency connversion between different currencies to make dealing easier 

## Usage

1. Select the source currency from the dropdown menu.

1. Enter the amount you want to convert.

1. Select the target currency from the dropdown menu.

1. Click on the "Convert" button to perform the currency conversion.

1. The converted amount will be displayed on the screen.

1. Click on the "Compare" button to compare between different currencies.

1. Click on add to favourites text button to select currency which you prefer it  

## Technologies Used

1. Kotlin: Kotlin is a modern programming language that is widely used for Android app development. It offers concise syntax, null safety, and interoperability with Java.

1. Jetpack Compose: Jetpack Compose is a UI toolkit for building native Android user interfaces. It provides a declarative and reactive approach to UI development, making it easier to create dynamic and interactive user interfaces.

1. Android Studio: Android Studio is the official integrated development environment (IDE) for Android app development. It provides a comprehensive set of tools and features specifically designed for Kotlin and Android development.

1. Retrofit: Retrofit is a type-safe HTTP client library for Android and Kotlin. It simplifies the process of making API calls and handling network requests, allowing you to fetch real-time exchange rate data.

1. SQLite: SQLite is a lightweight and embedded relational database management system. It can be used to store and manage currency exchange rate data locally on the device.

1. Coroutine: Kotlin Coroutines are a concurrency design pattern that simplifies asynchronous programming. They provide a way to write asynchronous code in a sequential and more readable manner.

1. Material Design Components: Material Design Components is a library that provides ready-to-use UI components following the Material Design guidelines. It offers pre-built UI elements and styling options for creating visually appealing interfaces.

1. Gradle: Gradle is a build automation tool used for building, testing, and deploying Android projects. It allows you to manage dependencies, compile code, and generate the final APK file for your application.

## Installation

1. Clone the repository to your local machine:
 
`shell
   git clone https://github.com/ghadyAmin/CurrencyCon_App.git
`

## Contributing

Contributions are welcome! If you have any suggestions, bug fixes, or new features to propose, please submit a pull request. Ensure that your code follows the project's coding conventions and includes appropriate tests.

## Screenshots
<div>
<img src ="https://github.com/ghadyAmin/CurrencyCon_App/assets/110892825/f7d8b351-93df-4bfe-a57b-a4e822129569" >
<img src ="https://github.com/ghadyAmin/CurrencyCon_App/assets/110892825/418534f3-214b-4013-9367-1fcbadbefc4b">
<img src ="https://github.com/ghadyAmin/CurrencyCon_App/assets/110892825/c0bc395f-8fde-4f6e-beb3-de1ed21eb287"> 
</div>

